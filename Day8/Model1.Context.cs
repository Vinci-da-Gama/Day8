//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Day8
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class Day8_DbEntities : DbContext
    {
        public Day8_DbEntities()
            : base("name=Day8_DbEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Customer> Customers { get; set; }
        public DbSet<Order> Orders { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int AddNewCreditLimit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNewCreditLimit");
        }
    
        public virtual int DropCreditLimi()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DropCreditLimi");
        }
    
        public virtual int DropCreditLimitAndAddNewOne()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DropCreditLimitAndAddNewOne");
        }
    
        public virtual ObjectResult<FindPeopleFromTexas_Result> FindPeopleFromTexas(string state)
        {
            var stateParameter = state != null ?
                new ObjectParameter("state", state) :
                new ObjectParameter("state", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindPeopleFromTexas_Result>("FindPeopleFromTexas", stateParameter);
        }
    
        public virtual int GenerateRandomSmallMoney()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenerateRandomSmallMoney");
        }
    
        public virtual int InsertOneRowToOrders(Nullable<int> odMLine)
        {
            var odMLineParameter = odMLine.HasValue ?
                new ObjectParameter("OdMLine", odMLine) :
                new ObjectParameter("OdMLine", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertOneRowToOrders", odMLineParameter);
        }
    
        public virtual int InsertRowByOutputVariable(ObjectParameter lastRowNum)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertRowByOutputVariable", lastRowNum);
        }
    
        public virtual int PrintReturnValAfterInsertRow()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PrintReturnValAfterInsertRow");
        }
    
        public virtual int RemoveOrderPriceAndAddNew()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveOrderPriceAndAddNew");
        }
    
        public virtual int ReturnLastRow(ObjectParameter mL)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReturnLastRow", mL);
        }
    
        public virtual int ReturnLastRowForCustomerTable(ObjectParameter mL)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ReturnLastRowForCustomerTable", mL);
        }
    
        public virtual ObjectResult<SelectAllCustomers_Result> SelectAllCustomers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllCustomers_Result>("SelectAllCustomers");
        }
    
        public virtual ObjectResult<SelectAllOrders_Result> SelectAllOrders()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectAllOrders_Result>("SelectAllOrders");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int UpdateRandomValForCreditLimit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRandomValForCreditLimit");
        }
    }
}
